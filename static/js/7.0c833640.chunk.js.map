{"version":3,"sources":["components/Shared/CustomFIeld/CustomField.jsx","components/Shared/CustomFIeld/CustomField.module.scss","utils/validators/validators.jsx","components/Login/Login.module.scss","components/Login/Login.jsx"],"names":["createField","placeholder","name","types","component","validators","type","props","text","className","checkbox","validate","id","htmlFor","CustomField","input","meta","touched","error","hasError","typeField","styles","module","exports","required","value","undefined","maxLength","max","length","LoginReduxForm","reduxForm","form","handleSubmit","captchaUrl","onSubmit","src","alt","typeClass","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe","captcha"],"mappings":"kNAqBaA,EAAc,SAACC,EAAaC,EAAMC,EAAOC,EAAWC,EAAYC,GAC1D,IADgEC,EACjE,uDADyE,GAAIC,EAC7E,uDADoF,QAClGC,EAAc,uCACRC,EAAoB,aAATJ,EACjB,OAAO,yBAAKG,UAAWA,GAAa,IAChC,kBAAC,IAAD,eAAOR,YAAaA,EACbC,KAAMA,EACNC,MAAOA,EACPC,UAAWA,EACXO,SAAUN,EACVC,KAAMA,EACNM,GAAIV,GACAK,IAEVG,GAAY,2BAAOG,QAASX,GAAOM,KAI7BM,IAjCK,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,MAAkD,KAA5CC,KAA4C,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAWX,EAAW,uCAChEY,EAAWF,GAAWC,EACtBE,EAAYb,EAAMJ,MACjBS,EAAML,EAANK,GACL,OACI,yBAAKH,UAAS,UAAKY,IAAO,gBAAZ,YAA+BF,EAAWE,IAAOH,MAAQ,KACpD,UAAdE,GAAyB,2CAAWL,EAAWR,EAAtB,CAA6BE,UAAWY,IAAON,MAAOH,GAAIA,KACrE,aAAdQ,GAA4B,8CAAcL,EAAWR,EAAzB,CAAgCK,GAAIA,KAClD,aAAdQ,GAA4B,yCAAOd,KAAK,YAAeS,EAAWR,EAAtC,CAA6CK,GAAIA,MAC5EQ,GAAa,mCAEdD,GAAY,6BAAMD,M,oBCf/BI,EAAOC,QAAU,CAAC,eAAe,kCAAkC,MAAQ,6B,iCCD3E,oEAAO,IAAMC,EAAW,SAAAC,GAAK,OAAc,MAATA,OAAgBC,EAAY,2BACjDC,EAAY,SAACC,GAAD,OAAS,SAAAH,GAAK,OAAIA,EAAMI,OAASD,EAAf,wCAAsDA,EAAtD,oBAAyEF,K,oBCApHJ,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,cAAc,2BAA2B,MAAQ,uB,iCCDhG,wGA6BMO,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAnBL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAcf,EAAuB,EAAvBA,MAAOgB,EAAgB,EAAhBA,WACrC,OACI,0BAAMC,SAAUF,GACXjC,YAAY,QAAS,QAAS,QAASc,IAAa,CAACU,KAAW,QAChExB,YAAY,WAAY,WAAY,QAASc,IAAa,CAACU,KAAW,YACtExB,YAAY,GAAI,aAAc,QAASc,IAAa,GACjD,WAAY,GAAI,cAAe,CAACO,IAAO,iBAC1CH,GAAS,yBAAKT,UAAWY,IAAOH,OAAQA,GACxCgB,GAAc,yBAAKE,IAAKF,EAAYG,IAAI,KACxCH,GAAclC,YAAY,oBAAqB,UAAW,QACvDc,IAAa,CAACU,KAAW,QAC7B,kBAAC,IAAD,CACIc,UAAW,OACXb,MAAO,QACPnB,KAAK,eAmCNiC,uBANO,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OACnBP,WAAYM,EAAME,KAAKR,cAGS,CAACS,WAA1BJ,EA7BD,SAAChC,GACX,GAAIA,EAAMkC,OACN,OAAO,kBAAC,IAAD,CAAUG,GAAG,aAKxB,OACI,yBAAKnC,UAAWY,IAAOsB,OACnB,qCACA,+CACA,4BACL,4DACA,oDAEK,kBAACb,EAAD,CACIK,SAZC,SAACU,GACVtC,EAAMoC,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAYrEf,WAAY3B,EAAM2B","file":"static/js/7.0c833640.chunk.js","sourcesContent":["import React from 'react'\r\nimport styles from './CustomField.module.scss'\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst CustomField = ({input,meta, meta: {touched, error}, ...props}) => {\r\n    let hasError = touched && error\r\n    let typeField = props.types\r\n    let {id} = props\r\n    return (\r\n        <div className={`${styles['custom-field']} ${hasError ? styles.error : ''}`}>\r\n            {typeField === 'input' && <input {...input} {...props} className={styles.input} id={id}/>}\r\n            {typeField === 'textarea' && <textarea {...input} {...props} id={id}/>}\r\n            {typeField === 'checkbox' && <input type='checkbox' {...input} {...props} id={id}/>}\r\n            {!typeField && <span> </span>}\r\n\r\n            {hasError && <div>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, types, component, validators, type, props = {}, text = 'label',\r\n    className) => {\r\n    const checkbox = type === 'checkbox';\r\n    return <div className={className || ''}>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               types={types}\r\n               component={component}\r\n               validate={validators}\r\n               type={type}\r\n               id={name}\r\n               {...props}\r\n        />\r\n        {checkbox && <label htmlFor={name}>{text}</label>}\r\n    </div>\r\n}\r\n\r\nexport default CustomField\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom-field\":\"CustomField_custom-field__1aYRx\",\"error\":\"CustomField_error__2rMzN\"};","export const required = value => (value != null ? undefined : 'This field is required!')\r\nexport const maxLength = (max) => value => value.length > max ? `Max length of this message is ${max} characters` : undefined\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1Jme1\",\"input-group\":\"Login_input-group__3nnwo\",\"error\":\"Login_error__yIo_v\"};","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport styles from './Login.module.scss'\r\nimport CustomField, {createField} from \"../Shared/CustomFIeld/CustomField\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Button from \"../Shared/Button/Button\";\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', 'input', CustomField, [required], 'text')}\r\n            {createField('Password', 'password', 'input', CustomField, [required], 'password')}\r\n            {createField('', 'rememberMe', 'input', CustomField, [],\r\n                'checkbox', {}, 'Remember me', [styles['input-group']])}\r\n            {error && <div className={styles.error}>{error}</div>}\r\n            {captchaUrl && <img src={captchaUrl} alt=\"\"/>}\r\n            {captchaUrl && createField('Captcha for image', 'captcha', 'input',\r\n                CustomField, [required], 'text')}\r\n            <Button\r\n                typeClass={'aqua'}\r\n                value={'Login'}\r\n                type='submit'\r\n            />\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\nconst Login = (props) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    let submit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    return (\r\n        <div className={styles.login}>\r\n            <h1>Login</h1>\r\n            <div>login details:</div>\r\n            <ul>\r\n\t\t\t\t\t\t\t<li>login: Offlensvets@gmail.com</li>\r\n\t\t\t\t\t\t\t<li>password: bender200</li>\r\n\t\t\t\t\t\t</ul>\r\n            <LoginReduxForm\r\n                onSubmit={submit}\r\n                captchaUrl={props.captchaUrl}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {login})(Login)\r\n"],"sourceRoot":""}