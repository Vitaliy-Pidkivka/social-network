{"version":3,"sources":["components/Sidebar/Sidebar.module.scss","serviceWorker.js","components/Sidebar/FriendList/Friend/Friend.jsx","components/Sidebar/FriendList/FriendList.jsx","components/Sidebar/FriendList/FriendListContainer.jsx","components/Sidebar/Sidebar.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/appReducer.ts","redux/sidebarReducer.ts","redux/redux-store.tsx","App.jsx","index.js","redux/authReducer.ts","components/Sidebar/FriendList/Friend/Friend.module.scss","components/Header/Header.module.scss","components/Shared/Button/Button.module.scss","components/Shared/Preloader/Preloader.jsx","components/Shared/Preloader/Preloader.module.scss","components/Shared/Button/Button.jsx","redux/profileReducer.ts","api/api.jsx","redux/dialogsReducer.js","utils/objectHelpers.jsx","redux/usersReducer.ts","components/Sidebar/FriendList/FriendList.module.scss","assets/images/logo.png"],"names":["module","exports","Boolean","window","location","hostname","match","Friend","props","className","styles","friend","href","link","src","avatarUrl","alt","name","FriendList","state","friendList","map","key","id","FriendListContainer","connect","sidebar","dispatch","Sidebar","nav","to","store","Music","music","News","news","Settings","settings","Header","header","logo","auth","isAuth","login","Button","value","typeClass","onClick","logout","HeaderContainer","this","React","Component","INITIALIZED_SUCCESS","initialState","initialized","appReducer","action","type","sidebarReducer","rootReducer","combineReducers","profile","profileReducer","dialogs","dialogsReducer","userPage","usersReducer","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunkMiddleware","__store__","ProfileContainer","lazy","UsersContainer","DialogsContainer","Login","App","initializeApp","fallback","Preloader","path","exact","render","component","title","big","AppContainer","withRouter","a","getAuthUserData","SocialNetworkApp","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","SET_AUTH_USER_DATA","GET_CAPTCHA_URL","userId","email","captchaUrl","setAuthUserData","payload","authApi","me","data","resultCode","password","rememberMe","captcha","getCaptchaUrl","errorMessage","messages","length","stopSubmit","_error","securityAPI","getCaptcha","url","preloader","sizeClass","imgSrc","imgClassName","button","ADD_POST","REMOVE_POST","SET_USER_PROFILE","SET_USER_STATUS","SAVE_AVATAR_SUCCESS","SET_EDIT_MODE","posts","likes","status","editMode","startPostId","addPost","newPostBody","removePost","setUserStatus","setEditMode","setProfile","profileApi","getProfile","getStatus","getUserStatus","updateStatus","updateUserStatus","saveAvatar","file","photos","saveProfile","getState","index","indexOf","err","substring","toLowerCase","newPostId","post","alert","filter","instance","axios","withCredentials","baseURL","headers","usersApi","getUsers","currentPage","pageSizes","get","response","unfollow","delete","follow","log","put","avatar","formData","FormData","append","ADD_MESSAGE","dialogList","1","opponent","2","addMessage","messageBody","stateCopy","push","updateObjectInArray","items","itemId","objPropName","newObjProps","item","FOLLOW","UNFOLLOW","SET_USERS","SET_PAGE","SET_TOTAL_USERS_COUNT","SET_IS_FETCHING","users","totalUsersCount","page","isFetching","followingInProgress","followSuccess","unfollowSuccess","setPage","toggleIsFetching","toggleFollowingProgress","requestUsers","totalCount","count","followUnfollowFlow","apiMethod","actionCreator","unfollowThunk","bind","followThunk","followed"],"mappings":"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","file":"static/js/main.d3df1541.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3aQlA\",\"nav\":\"Sidebar_nav__3g4Zn\",\"nav__btn\":\"Sidebar_nav__btn__3x8b-\",\"active\":\"Sidebar_active__2ib-U\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport styles from './Friend.module.scss'\r\n\r\nconst Friend = (props) => {\r\n\r\n    return (\r\n            <div className={styles.friend}>\r\n                    <a href={props.link}>\r\n                        <img className={styles['friend__avatar']}\r\n                             src={props.avatarUrl} alt=\"#\"/>\r\n                        <span className={styles['friend__name']}>{props.name}</span>\r\n                    </a>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Friend;\r\n","import React from 'react';\r\nimport styles from './FriendList.module.scss'\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst FriendList = (props) => {\r\n    return (\r\n        <div className={styles['friend-list']}>\r\n            {props.state.friendList.map((friend) => <Friend {...friend} key={friend.id}/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendList;\r\n","import FriendList from \"./FriendList\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        state: state.sidebar\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return { }\r\n}\r\n\r\nconst FriendListContainer  = connect(mapStateToProps,mapDispatchToProps)(FriendList)\r\n\r\nexport default FriendListContainer;\r\n","import React from 'react';\r\nimport styles from './Sidebar.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendListContainer from \"./FriendList/FriendListContainer\";\r\n\r\nconst Sidebar = (props) => {\r\n    return (\r\n        <div  className={styles.sidebar}>\r\n            <nav  className={styles.nav}>\r\n                <ul>\r\n                    <li><NavLink className={styles['nav__btn']} to=\"/profile\">Profile</NavLink></li>\r\n                    <li><NavLink className={styles['nav__btn']} to=\"/users\">Users</NavLink></li>\r\n                    <li><NavLink className={`${styles['nav__btn']}`} to=\"/dialogs\">Messages</NavLink></li>\r\n                    <li><NavLink className={styles['nav__btn']} to=\"/news\">News</NavLink></li>\r\n                    <li><NavLink className={styles['nav__btn']} to=\"/music\">Music</NavLink></li>\r\n                    <li><NavLink className={styles['nav__btn']} to=\"/settings\">Settings</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n            <FriendListContainer store={props.store}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport styles from './Music.module.scss'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={styles.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport styles from './News.module.scss'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={styles.news}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport styles from './Settings.module.scss'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={styles.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\nimport styles from './Header.module.scss';\nimport {NavLink} from \"react-router-dom\";\nimport Button from \"../Shared/Button/Button\";\nimport logo from '../../assets/images/logo.png'\n\nconst Header = (props) => {\n    return (\n        <header className={styles.header}>\n            <a href=\"#href\"><img src={logo}\n                                 alt=\"#\"\n                                 className=\"logo\"\n            /></a>\n            <div className={styles.auth}>\n                {props.isAuth ? <>\n                        <div className={styles.login}>{props.login}</div>\n                        <Button\n                            value={'logout'}\n                            typeClass={'aqua'}\n                            onClick={props.logout}\n                        /></>\n                    : <NavLink to={'/login'}> Login</ NavLink>}\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport { logout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"social-network/app/INITIALIZED_SUCCESS\";\r\n\r\nexport type  InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state= initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype initializeSuccessActionType = { type: typeof INITIALIZED_SUCCESS}\r\nexport const initializedSuccess = ():initializeSuccessActionType => ({  type: INITIALIZED_SUCCESS});\r\n//redux-thunk\r\nexport const initializeApp = () => async (dispatch: any) => {\r\n    await dispatch(getAuthUserData());\r\n    dispatch(initializedSuccess());\r\n}\r\n\r\n\r\nexport default appReducer;","interface FriendType  {\r\n    id: number,\r\n    avatarUrl: string,\r\n    name: string,\r\n    link?: string\r\n}\r\n\r\n\r\nlet initialState = {\r\n    friendList: [\r\n        {id: 1, avatarUrl: 'https://cdn1.iconfinder.com/data/icons/avatars-1-5/136/84-512.png', name: 'Tania Pidkivka', link: '#Tania-Pidkivka',},\r\n        {id: 2, avatarUrl: 'https://cdn4.iconfinder.com/data/icons/men-avatars-icons-set-1/256/21-512.png', name: 'Dmutro Pidkivka', link: '#Dmutro-Pidkivka',},\r\n        {id: 3, avatarUrl: 'https://cdn2.iconfinder.com/data/icons/men-avatars/33/man_2-512.png', name: 'Oleg Pupkin', link: '#Oleg-Pupkin',},\r\n        {id: 4, avatarUrl: 'https://cdn2.iconfinder.com/data/icons/men-avatars/33/man_7-512.png', name: 'Nazar Pupkin', link: '#Nazar-Pupkin',},\r\n    ] as Array<FriendType>\r\n}\r\nexport type initialStateType = typeof initialState\r\n\r\n\r\nconst sidebarReducer = (state:initialStateType = initialState, action: any): initialStateType => {\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    dialogs: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    userPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer // (globalState: AppStateType) => AppStateType\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n//@ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport default store","import React, {Suspense} from 'react';\r\nimport './App.scss';\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport {BrowserRouter, Redirect, Route, withRouter} from \"react-router-dom\";\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/Shared/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader big={true}/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <main className=\"content\">\r\n                    <Sidebar store={this.props.store}/>\r\n                    <div className=\"main-screen\">\r\n                        {<Suspense fallback={<Preloader/>}>\r\n                            <Route path=\"/\" exact\r\n                                   render={() => <Redirect to=\"/profile\"/>}\r\n                            />\r\n                            <Route path=\"/profile/:userId?\" exact\r\n                                   render={() => <ProfileContainer />}\r\n                            />\r\n                            <Route path=\"/dialogs/:id?\"\r\n                                   render={(props) => <DialogsContainer  {...props} />}/>\r\n                            <Route path=\"/news\" component={News}/>\r\n                            <Route path=\"/music\" component={Music}/>\r\n                            <Route path=\"/users\" render={() => <UsersContainer title={'Users'}/>}/>\r\n                            <Route path=\"/settings\" component={Settings}/>\r\n                            <Route path=\"/login\" exact component={Login}/>\r\n                        </Suspense>}\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nlet SocialNetworkApp = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default SocialNetworkApp\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport SocialNetworkApp from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <SocialNetworkApp/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","import {authApi, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = \"social-network/auth/SET-AUTH-USER-DATA\";\r\nconst GET_CAPTCHA_URL = 'social-network/auth/GET-CAPTCHA-URL'\r\n\r\nlet initialState  = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null,\r\n}\r\nexport type initialStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState, action: any): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        case GET_CAPTCHA_URL: {\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.url\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\ntype setAuthUserDataActionPayloadType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n}\r\ntype setAuthUserDataType = {\r\n    type: typeof SET_AUTH_USER_DATA,\r\n    payload: setAuthUserDataActionPayloadType\r\n\r\n}\r\nexport const setAuthUserData = (userId: number | null,\r\n                                email: string | null,\r\n                                login: string | null,\r\n                                isAuth: boolean): setAuthUserDataType => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\ntype getCaptchaSuccessType = {\r\n    type: typeof GET_CAPTCHA_URL,\r\n    url: string\r\n}\r\nexport const getCaptchaSuccess = (url: string): getCaptchaSuccessType => ({type: GET_CAPTCHA_URL, url});\r\n//redux-thunk\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    const data = await authApi.me()\r\n\r\n    if (data.resultCode === 0) {\r\n        let {id, email, login} = data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const login = (email:string, password:string, rememberMe: boolean, captcha:string) => async (dispatch: any) => {\r\n    const data = await authApi.login(email, password, rememberMe, captcha)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let errorMessage = 'Common error'\r\n        if (data.messages.length > 0) {\r\n            errorMessage = data.messages\r\n        }\r\n        dispatch(stopSubmit('login', {_error: errorMessage}))\r\n    }\r\n}\r\nexport const logout = () => async (dispatch: any) => {\r\n    const data = await authApi.logout()\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    const captchaUrl = await securityAPI.getCaptcha().then((data: any)  => data.url)\r\n    dispatch(getCaptchaSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__1IlhW\",\"friend__avatar\":\"Friend_friend__avatar__2bJQs\",\"friend__name\":\"Friend_friend__name__1LN6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2o0tG\",\"auth\":\"Header_auth__zKJLW\",\"login\":\"Header_login__3Rq57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3uU1H\",\"aqua\":\"Button_aqua__KkHXo\",\"purple\":\"Button_purple__1indp\",\"small\":\"Button_small__3VoCy\",\"preloader\":\"Button_preloader__2C7qJ\"};","import React from \"react\";\r\nimport styles from './Preloader.module.scss'\r\nconst Preloader = ({big, className}) => {\r\n    return(\r\n        <div className={`${styles.preloader} ${big && styles.big} ${className || ''}`}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport  default  Preloader\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2-mqm\",\"big\":\"Preloader_big__1P3Uo\",\"lds-ring\":\"Preloader_lds-ring__3YLER\"};","import React from 'react';\r\nimport styles from \"./Button.module.scss\";\r\n\r\nconst Button = ({value,type,typeClass,sizeClass,className,imgSrc, imgClassName, onClick}) => {\r\n\r\n    return (\r\n        <button type={type || 'button'} onClick={onClick}\r\n                className={`${styles.button} ${typeClass && styles[typeClass]} ${sizeClass &&\r\n                styles[sizeClass]} ${className && className}`}>\r\n            {value}\r\n            {imgSrc && <img src={imgSrc} className={imgClassName} alt=\"img\"/> }\r\n        </button>\r\n    )\r\n\r\n}\r\n\r\nexport default Button;","import {profileApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PostType, ProfileType, PhotosType} from \"../types/types\";\r\n\r\nconst ADD_POST = \"social-network/profile/ADD-POST\";\r\nconst REMOVE_POST = \"social-network/profile/REMOVE-POST\";\r\nconst SET_USER_PROFILE = \"social-network/profile/SET-USER-PROFILE\";\r\nconst SET_USER_STATUS = \"social-network/profile/SET-USER-STATUS\";\r\nconst SAVE_AVATAR_SUCCESS = \"social-network/profile/SAVE-AVATAR-SUCCESS\";\r\nconst SET_EDIT_MODE = \"social-network/profile/SET-EDIT-MODE\";\r\n\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likes: 15},\r\n        {id: 2, message: \"It's my new post\", likes: 20},\r\n        {id: 3, message: \"Social network in progress....\", likes: 52},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    editMode: false,\r\n    startPostId: 0\r\n}\r\n\r\nexport type initialStateType  = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action:any):initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            if (action.newPostBody) {\r\n                let newPostId = state.posts.map(post => post.id > state.startPostId && post.id + 1)\r\n                return {...state,\r\n                    posts: [...state.posts, {id: newPostId, message: action.newPostBody, likes: 0}] as Array<PostType>,}\r\n            } else {\r\n                alert(\"You didn't write anything, please write the text\")\r\n                return state\r\n            }\r\n        }\r\n        case REMOVE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.id)\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_AVATAR_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        }\r\n        case SET_EDIT_MODE: {\r\n            return {\r\n                ...state,\r\n                editMode: action.editMode\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype AddPostActionType = {\r\n    type: typeof ADD_POST,\r\n    newPostBody: string\r\n}\r\nexport const addPost = (newPostBody:string): AddPostActionType => ({type: ADD_POST, newPostBody});\r\ntype RemovePostActionType = {\r\n    type: typeof REMOVE_POST,\r\n    id: number\r\n}\r\nexport const removePost = (id:number):RemovePostActionType => ({type: REMOVE_POST, id});\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE,\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType):SetUserProfileActionType => ({type: SET_USER_PROFILE, profile});\r\ntype SetUserStatusActionType = {\r\n    type: typeof SET_USER_STATUS,\r\n    status: string\r\n}\r\nexport const setUserStatus = (status:string):SetUserStatusActionType => ({type: SET_USER_STATUS, status});\r\ntype AvatarSaveSuccessActionType = {\r\n    type: typeof SAVE_AVATAR_SUCCESS,\r\n    photos: PhotosType\r\n}\r\nexport const avatarSaveSuccess = (photos:PhotosType):AvatarSaveSuccessActionType => ({type: SAVE_AVATAR_SUCCESS, photos})\r\ntype SetEditModeActionType = {\r\n    type: typeof SET_EDIT_MODE,\r\n    editMode: boolean\r\n}\r\nexport const setEditMode = (editMode:boolean):SetEditModeActionType => ({type: SET_EDIT_MODE, editMode})\r\n//redux-thunk\r\nexport const setProfile = (userId:number) => async (dispatch:any) => {\r\n    const data = await profileApi.getProfile(userId)\r\n    dispatch(setUserProfile(data))\r\n}\r\nexport const getStatus = (userId:number) => async (dispatch:any) => {\r\n    const data = await profileApi.getUserStatus(userId)\r\n    dispatch(setUserStatus(data))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch:any) => {\r\n    const data = await profileApi.updateUserStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n}\r\nexport const saveAvatar = (file:any) => async (dispatch:any) => {\r\n    const data = await profileApi.saveAvatar(file)\r\n    if (data.resultCode === 0) {\r\n        dispatch(avatarSaveSuccess(data.data.photos))\r\n    }\r\n}\r\nexport const saveProfile = (profile:ProfileType) => async (dispatch:any, getState:any) => {\r\n    const userId = getState().auth.userId\r\n    const data = await profileApi.saveProfile(profile)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setProfile(userId))\r\n        dispatch(setEditMode(false))\r\n    } else{\r\n        let index = data.messages[0].indexOf('>')\r\n        let err = data.messages[0].substring(index + 1, data.messages[0].length - 1).toLowerCase()\r\n        dispatch(stopSubmit('description-form', {'contacts': {[err]: data.messages[0]}}))\r\n    }\r\n}\r\n\r\nexport default profileReducer","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://simple-blog-api.crew.red/posts',\r\n    headers: {\r\n        \"API-KEY\": '56713e4f-1fb2-40c8-8cb7-285eab7c3268'\r\n    }\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage = 1, pageSizes = 10) {\r\n        return instance.get(\r\n            `users?page=${currentPage}&count=${pageSizes}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(\r\n            `follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(\r\n            `follow/${userId}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n            .then(response => response.data)\r\n    },\r\n\r\n}\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get('security/get-captcha-url')\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfile(userId) {\r\n        return instance.get(\r\n            `profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getUserStatus(userId) {\r\n        try {\r\n            return instance.get(\r\n                `profile/status/${userId}`)\r\n                .then(response => response.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    },\r\n    updateUserStatus(status) {\r\n        return instance.put(\r\n            `profile/status`, {status})\r\n            .then(response => response.data)\r\n    },\r\n    saveAvatar(avatar) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", avatar);\r\n        return instance.put(\r\n            `profile/photo`, formData, {\r\n                headers: {\"Content-Type\": \"multipart/form-data\"}\r\n            })\r\n            .then(response => response.data)\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put('profile', profile)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\n","const ADD_MESSAGE = \"social-network/dialogs/ADD-MESSAGE\"\r\n\r\n\r\nlet initialState = {\r\n    dialogList: [\r\n        {name: 'Tania Pidkivka', id: 1},\r\n        {name: 'Dmutro Pidkivka', id: 2}\r\n    ],\r\n    messages: {\r\n        1: [{message: 'Hi how are you?'}, {message: \"I'm fine and you?\", opponent: true},],\r\n        2: [{message: 'Hello, what are you doing?'}, {message: \"Hi, i'm playing computer games\", opponent: true},\r\n            {message: \"How are you?\", opponent: true}, {message: \"I'm fine, thanks\"},],\r\n    },\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let stateCopy = {...state, messages: {...state.messages}}\r\n            stateCopy.messages[action.id].push({id: 5, message: action.messageBody, likes: 0})\r\n            return stateCopy\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessage = (id,messageBody) => ({type: ADD_MESSAGE, id, messageBody})\r\n\r\nexport default dialogsReducer","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    let arr =  items.map(item => {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps}\r\n        }\r\n        return item\r\n    })\r\n    return arr\r\n}","import {usersApi} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\nimport {ProfileType, UserType} from \"../types/types\";\r\nconst FOLLOW = \"social-network/users/FOLLOW\";\r\nconst UNFOLLOW = \"social-network/users/UNFOLLOW\";\r\nconst SET_USERS = \"social-network/users/SET-USERS\";\r\nconst SET_PAGE = \"social-network/users/SET-PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"social-network/users/SET-TOTAL-USERS-COUNT\";\r\nconst SET_IS_FETCHING = \"social-network/users/SET-IS-FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"social-network/users/TOGGLE-IS-FOLLOWING-PROGRESS\";\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSizes: 15,\r\n    totalUsersCount: 0,\r\n    page: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>//array of users id,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nconst usersReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_PAGE: {\r\n            return {\r\n                ...state,\r\n                page: action.page,\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case SET_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isFetching\r\n                        ? [...state.followingInProgress, action.userId]\r\n                        : [...state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW,\r\n    userId: number\r\n}\r\nexport const followSuccess = (userId:number):FollowSuccessActionType => ({type: FOLLOW, userId});\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW,\r\n    userId: number\r\n}\r\nexport const unfollowSuccess = (userId:number):UnfollowSuccessActionType => ({type: UNFOLLOW, userId});\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS,\r\n    users: Array<ProfileType>\r\n}\r\nexport const setUsers = (users: Array<ProfileType>):SetUsersActionType => ({type: SET_USERS, users});\r\ntype SetPageActionType = {\r\n    type: typeof  SET_PAGE,\r\n    page: number\r\n}\r\nexport const setPage = (page:number):SetPageActionType => ({type: SET_PAGE, page});\r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof  SET_TOTAL_USERS_COUNT,\r\n    count: number\r\n}\r\nexport const setTotalUsersCount = (totalCount: number):SetTotalUsersCountActionType =>\r\n    ({type: SET_TOTAL_USERS_COUNT, count: totalCount});\r\ntype ToggleIsFetchingActionType = {\r\n    type: typeof  SET_IS_FETCHING,\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching:boolean):ToggleIsFetchingActionType =>\r\n    ({type: SET_IS_FETCHING, isFetching: isFetching});\r\ntype ToggleFollowingProgress ={\r\n    type: typeof  TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching: boolean,\r\n    userId: number\r\n}\r\nexport const toggleFollowingProgress = (isFetching:boolean, userId: number):ToggleFollowingProgress => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching: isFetching,\r\n    userId\r\n});\r\n// redux-thunk\r\nexport const requestUsers = (currentPage:number, pageSizes: number) => {\r\n    return async (dispatch:any) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let data = await usersApi.getUsers(currentPage, pageSizes)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch:any, userId:number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\nexport const unfollowThunk = (userId:number) => async (dispatch:any) => {\r\n    followUnfollowFlow(dispatch, userId, usersApi.unfollow.bind(usersApi), unfollowSuccess)\r\n}\r\nexport const followThunk = (userId:number) => async (dispatch:any) => {\r\n    followUnfollowFlow(dispatch, userId, usersApi.follow.bind(usersApi), followSuccess)\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__1zOfb\"};","module.exports = __webpack_public_path__ + \"static/media/logo.00c32955.png\";"],"sourceRoot":""}