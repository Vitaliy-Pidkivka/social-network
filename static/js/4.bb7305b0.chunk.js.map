{"version":3,"sources":["components/Shared/CustomFIeld/CustomField.jsx","components/Shared/CustomFIeld/CustomField.module.scss","utils/validators/validators.jsx","assets/images/user-avatar.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/Profile.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","assets/images/bg-profile.jpg","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["createField","placeholder","name","types","component","validators","type","props","text","className","checkbox","validate","id","htmlFor","CustomField","input","meta","touched","error","hasError","typeField","styles","module","exports","required","value","undefined","maxLength","max","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","profile__status","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","ProfileInfo","profile","src","photos","small","alt","profile__avatar","fullName","href","contacts","twitter","Preloader","Post","message","likes","removePost","post","userAvatar","Button","onClick","typeClass","maxLength100","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","MyPosts","React","memo","myPosts","values","addPost","newPostBody","posts","map","key","MyPostsContainer","connect","state","Profile","profileBg","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","setProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.bb7305b0.chunk.js","sourcesContent":["import React from 'react'\r\nimport styles from './CustomField.module.scss'\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst CustomField = ({input, meta: {touched, error}, ...props}) => {\r\n    let hasError = touched && error\r\n    let typeField = props.types\r\n    let {id} = props\r\n    return (\r\n        <div className={`${styles['custom-field']} ${hasError ? styles.error : ''}`}>\r\n            {typeField === 'input' ? <input {...input} {...props} className={styles.input} id={id}/>\r\n                : typeField === 'textarea' ? <textarea {...input} {...props} id={id}/>\r\n                    : typeField === 'checkbox' ? <input type='checkbox' {...input} {...props} id={id}/>\r\n                        : <span> </span>\r\n            }\r\n            {hasError && <div>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, types, component, validators, type, props = {}, text = 'label',className) => {\r\n    const checkbox = type === 'checkbox';\r\n    return <div className={className || ''}>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               types={types}\r\n               component={component}\r\n               validate={validators}\r\n               type={type}\r\n               id={checkbox && name}\r\n               {...props}\r\n        />\r\n        {checkbox && <label htmlFor={name}>{text}</label>}\r\n    </div>\r\n}\r\n\r\nexport default CustomField\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom-field\":\"CustomField_custom-field__26Tf7\",\"error\":\"CustomField_error__3nk_w\"};","export const required = value => (value != null ? undefined : 'This field is required!')\r\nexport const maxLength = (max) => value => value.length > max ? `Max length of this message is ${max} characters` : undefined\r\n","module.exports = __webpack_public_path__ + \"static/media/user-avatar.d60e2ec5.png\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__info\":\"ProfileInfo_profile__info__1DfHF\",\"profile__avatar\":\"ProfileInfo_profile__avatar__3loHY\",\"profile__name\":\"ProfileInfo_profile__name__3feR8\",\"profile__status\":\"ProfileInfo_profile__status__2ybHT\",\"profile__status-input\":\"ProfileInfo_profile__status-input__2PlC_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__img\":\"Profile_profile__img__FpDi1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__dpVqT\",\"myPosts__btn\":\"MyPosts_myPosts__btn__A1qrB\",\"myPosts__title\":\"MyPosts_myPosts__title__1mJkk\",\"newPost\":\"MyPosts_newPost__1rFCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__VBOME\",\"post__image\":\"Post_post__image__1ZgpT\",\"post__message\":\"Post_post__message__R6PAh\",\"post__likes-count\":\"Post_post__likes-count__4tCXe\",\"post__likes-btn\":\"Post_post__likes-btn__3T1At\"};","module.exports = __webpack_public_path__ + \"static/media/bg-profile.9203aa6d.jpg\";","import React, {useEffect, useState} from 'react';\r\nimport styles from './ProfileInfo.module.scss'\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const disableActiveMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onChangeInputValue = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.profile__status}>\r\n            {!editMode && <p onDoubleClick={activateEditMode}>{status || '---'}</p>}\r\n            {editMode && <input onBlur={disableActiveMode} type=\"text\"\r\n                                className={styles['profile__status-input']}\r\n                                autoFocus={true}\r\n                                onChange={onChangeInputValue}\r\n                                value={status}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from 'react';\r\nimport styles from './ProfileInfo.module.scss'\r\nimport Preloader from \"../../Shared/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={styles['profile__info']}>\r\n            <img src={profile.photos.small} alt=\"#\"\r\n                 className={styles.profile__avatar}/>\r\n            <div className=\"profile__info-box\">\r\n                <div className={styles['profile__name']}><p>{profile.fullName}</p></div>\r\n                <ProfileStatus updateStatus={updateStatus} status={status}/>\r\n                <div className=\"profile__site\">\r\n                    Web Site:\r\n                    <p><a href=\"https://google.com\"> {profile.contacts.twitter}</a></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\nimport styles from './Post.module.scss'\nimport userAvatar from '../../../../assets/images/user-avatar.png'\nimport Button from \"../../../Shared/Button/Button\";\n\nconst Post = ({message, likes, removePost,id}) => {\n    const onRemovePost = (postId) => {\n        removePost(postId)\n    }\n    return (\n        <div className={styles.post}>\n            <div className={styles['post__image']}>\n                <img src={userAvatar} alt=\"#\"/>\n            </div>\n            <div className={styles['post__message']}><p>{message}</p></div>\n            <div className={styles['post__likes-count']}>\n                <span>{likes}</span>\n                <a className={styles['post__likes-btn']} href=\"#placeholder\">\n                    <img\n                        src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/160/facebook/230/white-heart_1f90d.png\"\n                        alt=\"#\"/>\n                </a>\n            </div>\n            <Button onClick={()=>{onRemovePost(id)}}\n                    value=\"Remove post\"\n                    typeClass=\"purple\"/>\n        </div>\n    );\n}\n\nexport default Post;\n","import React from 'react';\r\nimport styles from './MyPosts.module.scss'\r\nimport Post from \"./Post/Post\";\r\nimport Button from \"../../Shared/Button/Button\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport CustomField from \"../../Shared/CustomFIeld/CustomField\";\r\nimport {maxLength, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLength(100,)\r\nconst AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field name={'newPostBody'}\r\n               component={CustomField}\r\n               types={'textarea'}\r\n               validate={[required, maxLength100]}\r\n               placeholder={'My own social network in progress...'}\r\n               id={'newPostBody'}\r\n        />\r\n        <Button type={'submit'}\r\n                onClick={props.onClick}\r\n                value=\"Add post\" typeClass=\"aqua\"\r\n        />\r\n    </form>\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'addNewPostForm'})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const addPost = (values) => {\r\n        props.addPost(values.newPostBody)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.myPosts}>\r\n            <div className={styles['myPosts__title']}>\r\n                <p> My posts </p>\r\n            </div>\r\n            <div className={styles['newPost']}>\r\n                <AddNewPostReduxForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className=\"posts\">\r\n                {props.posts.map(post => <Post {...post}\r\n                                               id={post.id}\r\n                                               key={post.id}\r\n                                               removePost={props.removePost}\r\n                />)}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;\r\n","import {\r\n    addPost,\r\n    removePost,\r\n} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profile.posts\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,{addPost, removePost})(MyPosts)\r\n//\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport profileBg from '../../assets/images/bg-profile.jpg'\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={styles['profile']}>\r\n            <div className={styles['profile__img']}>\r\n                <img\r\n                    src={profileBg}\r\n                    alt=\"#\"/>\r\n            </div>\r\n            <ProfileInfo updateStatus={props.updateStatus} status={props.status}  profile={props.profile}/>\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, setProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends  React.Component{\r\n\r\n    componentDidMount() {\r\n        let userId= this.props.match.params.userId\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.setProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render(){\r\n        return  <Profile updateStatus={this.props.updateStatus}\r\n                         status={this.props.status}\r\n                         profile={this.props.profile}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state)=>({\r\n    profile: state.profile.profile,\r\n    status: state.profile.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setProfile, updateStatus, getStatus}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}