{"version":3,"sources":["components/Shared/CustomFIeld/CustomField.jsx","components/Shared/CustomFIeld/CustomField.module.scss","utils/validators/validators.jsx","components/Dialogs/Dialogs.module.scss","components/Dialogs/Dialog/Dialog.module.scss","components/Dialogs/Message/Message.module.scss","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["createField","placeholder","name","types","component","validators","type","props","text","className","checkbox","validate","id","htmlFor","CustomField","input","meta","touched","error","hasError","typeField","styles","module","exports","required","value","undefined","maxLength","max","length","Dialog","path","dialog","to","Button","sizeClass","typeClass","Message","opponent","message","maxLength80","AddNewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","onClick","Dialogs","match","params","dialogs","state","dialogList","map","key","messages","item","index","values","addMessage","newMessageBody","mapStateToProps","isAuth","auth","compose","connect","Component","RedirectCompoennt","this","React"],"mappings":"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","file":"static/js/6.84349ff0.chunk.js","sourcesContent":["import React from 'react'\r\nimport styles from './CustomField.module.scss'\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst CustomField = ({input,meta, meta: {touched, error}, ...props}) => {\r\n    let hasError = touched && error\r\n    let typeField = props.types\r\n    let {id} = props\r\n    return (\r\n        <div className={`${styles['custom-field']} ${hasError ? styles.error : ''}`}>\r\n            {typeField === 'input' && <input {...input} {...props} className={styles.input} id={id}/>}\r\n            {typeField === 'textarea' && <textarea {...input} {...props} id={id}/>}\r\n            {typeField === 'checkbox' && <input type='checkbox' {...input} {...props} id={id}/>}\r\n            {!typeField && <span> </span>}\r\n\r\n            {hasError && <div>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, types, component, validators, type, props = {}, text = 'label',\r\n    className) => {\r\n    const checkbox = type === 'checkbox';\r\n    return <div className={className || ''}>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               types={types}\r\n               component={component}\r\n               validate={validators}\r\n               type={type}\r\n               id={name}\r\n               {...props}\r\n        />\r\n        {checkbox && <label htmlFor={name}>{text}</label>}\r\n    </div>\r\n}\r\n\r\nexport default CustomField\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom-field\":\"CustomField_custom-field__26Tf7\",\"error\":\"CustomField_error__3nk_w\"};","export const required = value => (value != null ? undefined : 'This field is required!')\r\nexport const maxLength = (max) => value => value.length > max ? `Max length of this message is ${max} characters` : undefined\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1L9Fj\",\"dialogs__items\":\"Dialogs_dialogs__items__1c-wd\",\"dialogs__messages\":\"Dialogs_dialogs__messages__3fIU0\",\"message\":\"Dialogs_message__3L_9e\",\"opponent\":\"Dialogs_opponent__2KbC0\",\"message__text\":\"Dialogs_message__text__2a7QK\",\"dialogs__btn\":\"Dialogs_dialogs__btn__14aSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__3_zAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2H8jp\",\"opponent\":\"Message_opponent__2hH1K\",\"message__text\":\"Message_message__text__1SnJW\"};","import React from 'react';\r\nimport styles from './Dialog.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"../../Shared/Button/Button\";\r\n\r\nconst Dialog = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink> <Button value=\"remove\" sizeClass=\"small\" typeClass='aqua'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport styles from './Message.module.scss'\r\nimport Button from \"../../Shared/Button/Button\";\r\n\r\n\r\nconst Message = (props) => {\r\n    const {opponent} = props\r\n    const className = `${styles.message} ${opponent ? styles.opponent : \"\"}`\r\n    return (\r\n        <div className={className}>\r\n            <span className={styles['message__text']}>{props.message}</span>\r\n            <Button value=\"remove\" sizeClass=\"small\" typeClass={'aqua'}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './Dialogs.module.scss'\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport Button from \"../Shared/Button/Button\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport CustomField from \"../Shared/CustomFIeld/CustomField\";\r\nimport {maxLength, required} from \"../../utils/validators/validators\";\r\n\r\nlet maxLength80 = maxLength(80)\r\nconst AddNewMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field name={'newMessageBody'}\r\n               types={'textarea'}\r\n               validate={[required, maxLength80]}\r\n               component={CustomField}\r\n               placeholder=\"Send your message...\"\r\n               id={'newMessageBody'}\r\n        />\r\n        <Button onClick={props.handleSubmit}\r\n                type={'submit'}\r\n                value={\"Send\"}\r\n                typeClass=\"aqua\" sizeClass=\"small\"\r\n                className={styles[\"dialogs__btn\"]}/>\r\n    </form>\r\n}\r\nconst AddNewMessageReduxForm = reduxForm({form: 'AddNewMessageForm'})(AddNewMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n    const {id} = props.match.params\r\n\r\n    const addNewMessage = (values) => {\r\n        props.addMessage(id, values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles['dialogs__items']}>\r\n                {props.state.dialogList.map((dialog) => (\r\n                    <Dialog {...dialog} key={dialog.id}/>\r\n                ))}\r\n            </div>\r\n            {id && <div className={styles['dialogs__messages']}>\r\n                {(props.state.messages[id] || []).map((item, index) => (\r\n                    <Message {...item} key={index}/>\r\n                ))}\r\n                <AddNewMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state)=> {\r\n   return{\r\n       isAuth: state.auth.isAuth\r\n   }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectCompoennt extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectCompoennt)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import {addMessage} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.dialogs,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}